/*
 * Copyright 2012-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def collectAttributes(String configurationName) {
	def attributes = configurations.findByName(configurationName).attributes
	def keys = new TreeSet<>((a1, a2) -> a1.name.compareTo(a2.name))
	keys.addAll(attributes.keySet())
	keys.collect { key -> "${key}: ${attributes.getAttribute(key)}" }
}

plugins {
	id 'org.springframework.boot' version '{version}'
	id 'java'
}

springBoot {
	mainClass = "com.example.Main"
}

gradle.taskGraph.whenReady {
	def runtimeClasspathAttributes = collectAttributes("runtimeClasspath")
	def productionRuntimeClasspathAttributes = collectAttributes("productionRuntimeClasspath")
	println("runtimeClasspath: ${runtimeClasspathAttributes}")
	println("productionRuntimeClasspath: ${productionRuntimeClasspathAttributes}")
}